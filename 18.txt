<?php
$max_salida = 10; // Previene algun posible ciclo infinito limitando a 10 los ../
$ruta_raiz = $ruta = "";
while ($max_salida > 0) {
	if (@is_file($ruta . "define.php")) {
		$ruta_raiz = $ruta; //Preserva la ruta superior encontrada
		break;
	}
	$ruta .= "../";
	$max_salida--;
}

include_once($ruta_raiz . 'define.php');
include_once($ruta_raiz . 'clases.php');
include_once($ruta_raiz . 'funciones_generales.php');

$acceso = new Acceso();

if (@$_REQUEST['fun_id']) {
	$fun_id = @$_REQUEST['fun_id'];
} else {
	$session = new Session();
	$usuario_actual = $session->get('user');
	$fun_id = @$usuario_actual['id'];
}
?>
<html>

<head>
	<title>Cambiar Contrase&ntilde;a</title>

	<?php
	$lib = new Libreria();
	$cadena_librerias = '';
	$cadena_librerias .= $lib->jquery();
	$cadena_librerias .= $lib->bootstrap();
	$cadena_librerias .= $lib->general();
	$cadena_librerias .= $lib->responsive();
	$cadena_librerias .= $lib->sweetalert2();
	echo ($cadena_librerias);
	?>
</head>

<body>

	
<div class="container contenedor_general">
		<div class="row titulo_general_row">
			<div class="col-12 titulo_general">
				<h1>Cambiar Contrase&ntilde;a</h1>
			</div>
		</div>
		<div class="row">
			<div class="col-12">
				<br>


			<!-- id causando posible error de validacion en input(validate)-->
				<form class="form-horizontal" id="form_cambiar_contrasena"> 

					<fieldset>
						<!-- Password input-->
						<div class="form-group">
							<label class="col-md-4 control-label label_general" for="fun_pass">Nueva Contrase&ntilde;a*</label>
							
							<div class="col-md-12">
								<input type="password" id="fun_pass" name="fun_pass" class="form-control input-md" required>
							</div>
						</div>

						<!-- Password input 2-->
						<div class="form-group">
							<label class="col-md-4 control-label label_general" for="fun_pass_repeat">Repetir Nueva Contrase&ntilde;a*</label>
							<div class="col-md-12">
								<input id="fun_pass_repeat" name="fun_pass_repeat" type="password" class="form-control input-md" required disabled>
							</div>
						</div>

						<!-- Button -->
						<div class="form-group">
							<label class="col-md-4 control-label label_general" for="btn_cambiar_contrasena"></label>
							<div class="col-md-12">
								<button type="button" id="btn_cambiar_contrasena" name="btn_cambiar_contrasena" class="float float-right btn btn-primary">Cambiar Contrase&ntilde;a</button>
							</div> 
						</div>
						<input type="hidden" name="ejecutar_accion" id="ejecutar_accion" value="cambiar_contrasena_funcionario">
						<input type="hidden" name="fun_id" id="fun_id" value="<?php echo ($fun_id); ?>">
					</fieldset>
				</form>
			</div>
		</div>
	</div>
</body>

</body>

</html>
<script>

	
	$(document).ready(function() {
		// Función debounce para retrasar la validación de contraseña
		//retrasa la validación de contraseña
		function debounce(func, delay) { //funcion que se desea retrasar(validatePassword)

			let timer; //almacena el identificador del temporizador que controla el retardo.
			return function() {
				const context = this;
				const args = arguments; //almacena los argumentos pasados a la funcion
				clearTimeout(timer); //borra el temporizador previo 

				timer = setTimeout(() => { //crea nuevo temporizador
					func.apply(context, args); //llama a una funcion con un contexto especifico y pasarle un array de arg
				}, delay);
			};
		}




		// Función para validar la contraseña
		function validatePassword() {
			var pass1 = $('#fun_pass').val();
			var isValid = true;
			var minLength = 8;
			var hasUpperCase = /[A-Z]/.test(pass1);
			var hasNumber = /[0-9]/.test(pass1);
			var hasSpecialChar = /[!@#$%^&*()]/.test(pass1);
			var confirmPasswordInput = $('#fun_pass_repeat'); //recupera el valor del segundo id y lo almacena, para comparar
			


			// Si el campo está vacío, eliminar las alertas activas y deshabilitar el campo de confirmación
            if (pass1 === '') {
                Swal.close();
                confirmPasswordInput.prop('disabled', true);
				// Resetear el campo de confirmación
                confirmPasswordInput.val(''); 
				
                return;
            }
            

			if (!hasUpperCase) {
				swal.fire({
					title: "La contraseña debe contener al menos una Mayúscula",
					toast: "true",
					showConfirmButton: false,
					position: "bottom-end",
					icon: "warning"
				})
				isValid = false;
			}
			if (!hasNumber) {
				swal.fire({
					title: "La contraseña debe incluir al menos un número",
					toast: true,
					showConfirmButton: false,
					position: "bottom-end",
					icon: "warning"

				})
				isValid = false;

			}


			if (!hasSpecialChar) {
				swal.fire({
					title: "La contraseña debe incluir al menos un carácter especial",
					toast: true,
					showConfirmButton: false,
					position: "bottom-end",
					icon: "warning"

				})
				isValid = false;
			}

			if (pass1.length < minLength) {
				swal.fire({
					title: "Usa 8 o más caracteres para tu contraseña",
					toast: "true",
					showConfirmButton: false,
					position: "bottom-end",
					icon: "warning"
				})
				isValid = false;
			}


			if (isValid) {
				confirmPasswordInput.prop('disabled', false);
				swal.fire({
				title: "Confirma tu contraseña",
				toast: "true",
				showConfirmButton: false,
				position: "bottom-end",
				icon: "info"
				})
			} else {
				confirmPasswordInput.prop('disabled', true);
				confirmPasswordInput.val(''); // Resetear el campo de confirmación
			}
		}

		// Aplicar debounce a la función de validación de contraseña
		$('#fun_pass').keyup(debounce(validatePassword, 1000));

		


		

		// Click del botón para cambiar la contraseña
		$('#btn_cambiar_contrasena').click(function() {
			if ($("#form_cambiar_contrasena").valid()) {
				var pass1 = $('#fun_pass').val();
				var pass2 = $('#fun_pass_repeat').val();

				if (pass1 == pass2) {
					var formData = new FormData(document.getElementById("form_cambiar_contrasena"));
					$.ajax({
						type: 'POST',
						dataType: 'json',
						url: "ejecutar_acciones.php",
						cache: false,
						contentType: false,
						processData: false,
						data: formData,
						success: function(datos) {

							if (datos.exito) {
								swal.fire({
									title: "Contraseña Actualizada Satisfactoriamente",
									toast: true,
									showConfirmButton: false,
									position: "bottom-end",
									icon: "success"
							})

								setTimeout(function() {
									<?php if (@$_REQUEST['fun_id']) { ?>
										parent.hs.close();
									<?php } else { ?>
										window.location = '<?php echo ($ruta_raiz); ?>ceg.php';
									<?php } ?>
								}, 1000);
								
							} else {
								swal.fire({
									title: "Las contraseñas ingresadas NO coinciden. Favor verificar",
									toast: true,
									showConfirmButton: false,
									position: "bottom-end",
									icon: "error"
								})
							}
						}
					});
				} else {
					swal.fire({
						title: "Las contraseñas ingresadas NO coinciden. Favor verificar",
						toast: true,
						showConfirmButton: false,
						position: "bottom-end"

					})
				}
			}
		});

		// Detectar Enter para hacer clic en el botón
		$(document).keypress(function(e) {
			if (e.which == 13) {
				$('#btn_cambiar_contrasena').trigger('click');
			}
		});
	});
</script>

