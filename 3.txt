js

/* Declare scoped variables*/
let copyFromUserSelect = []
let copyToUserSelect = []
/* END: Variables */

/* MODAL FUNCTIONS */

const initialConfig = () => {
    let optionPlataform = 
        `
            <option value="0">Seleccione...</option>
            <option value="1">Dynamics</option>
            <option value="2">Yéminus</option>
        `

    document.querySelector('.selectApp').innerHTML=optionPlataform;

    tail.select(".selectApp", { 
        animate: true,  
        placeholder: "Seleccione...",
        search: false,
        width: "100%",
        deselect: false
    });
}

function imgError(image , event) {
    event.preventDefault();
    image.onerror = null; // Evita que se produzca un bucle infinito
    image.src = "../../../almacenamiento/foto-usuario/0.png"; // Ruta de una imagen por defecto
    return true;
}

const getUser = async (filter,label) => {
    let filterInfo = filter.target.value.toLowerCase()

    let appSelected = document.querySelector('.selectApp').value
    let labelFilter = label ? '#copyFromFound' : '#copyToFound'

    if(appSelected && filterInfo.length > 3){
        if(appSelected == 1){
            //console.log("Dynamics-> ",filterInfo);
            top.document.getElementById('mainLoader').classList.remove('hidden');

            await fetch('CopyPermissions.php',{
                method:'post',
                body:JSON.stringify({
                    class:'CopyPermissions',
                    method:'listUserDynamics',
                    param:{
                        filter:filterInfo
                    }
                })
            })
            .then(res=>res.json())
            .then(res=>{
                let listUsersFound = ``

                if(res.success){
                    ///PINTAR
                    for (let index = 0; index < res.data.cantidad_registros; index++) {
                        listUsersFound+=
                        `
                        <li class="flex py-2 hover:bg-gray-50 items-center cursor-pointer" onClick="userSelectedFilter(this,${label})"  data-id="${res.data[index].fun_id}" data-name="${res.data[index].fun_usuario}">
                            <img class="h-8 w-8 rounded-full" onerror="imgError(this, event)" src="../../../almacenamiento/foto-usuario/${res.data[index].fun_identificacion}.jpg" alt="">
                            <div class="ml-3">
                                <p class="text-xs font-medium text-gray-900">${res.data[index].fun_nombre_completo} (<u><i> ${res.data[index].fun_usuario} </i></u>)</p>
                                <p class="text-xs font-light text-blue-600">${res.data[index].car_tag}</p>
                            </div>
                        </li>                            
                        `                          
                    }

                    document.querySelector(labelFilter).innerHTML = listUsersFound

                }
            })
            .catch(error=>{
                Swal.fire(
                    'Atención',
                    'Se presentó un error, intente más tarde',
                    'error'
                )
                console.error(error)
            })
            .finally(()=>{
                top.document.getElementById('mainLoader').classList.add('hidden');
            })

        }
        else if(appSelected == 2){
            //console.log("Yéminus-> ",filterInfo);
            /* 
            ? BACKEND CONSULTA YEMINUS
            */

            top.document.getElementById('mainLoader').classList.remove('hidden');

            await fetch('CopyPermissions.php',{
                method:'post',
                body:JSON.stringify({
                    class:'CopyPermissions',
                    method:'listUserYeminus',
                    param:{
                        filter:filterInfo
                    }
                })
            })
            .then(res=>res.json())
            .then(res=>{
                let listUsersFound = ``

                if(res.success){
                    ///PINTAR
                    for (let index = 0; index < res.data.cantidad_registros; index++) {
                        listUsersFound+=
                        `
                        <li class="flex py-2 hover:bg-gray-50 items-center cursor-pointer" onClick="userSelectedFilter(this,${label})"  data-id="${res.data[index].USU_IDENTIFICACION}" data-name="${res.data[index].USU_IDENTIFICACION}">
                            <img class="h-8 w-8 rounded-full" onerror="imgError(this, event)" src="../../../almacenamiento/foto-usuario/${res.data[index].NUM_IDENTIFICACION}.jpg" alt="">
                            <div class="ml-3">
                                <p class="text-xs font-medium text-gray-900">${res.data[index].USU_NOMBRE_USUARIO} (<u><i> ${res.data[index].USU_IDENTIFICACION} </i></u>)</p>
                                
                            </div>
                        </li>                            
                        `                          
                    }

                    document.querySelector(labelFilter).innerHTML = listUsersFound

                }
            })
            .catch(error=>{
                Swal.fire(
                    'Atención',
                    'Se presentó un error, intente más tarde',
                    'error'
                )
                console.error(error)
            })
            .finally(()=>{
                top.document.getElementById('mainLoader').classList.add('hidden');
            })
        }
    }else{
        /* Reset filter data */
        document.querySelector(labelFilter).innerHTML = ''
    }    
}

const userSelectedFilter =(e, label)=>{
    if(e.dataset.id && e.dataset.name){
      let idExist = label ? copyFromUserSelect.find(x=>x.id==e.dataset.id) : copyToUserSelect.find(x=>x.id==e.dataset.id);
      
      if(idExist == undefined){
        label ? copyFromUserSelect.push({name:e.dataset.name, id:e.dataset.id}) : copyToUserSelect.push({name:e.dataset.name, id:e.dataset.id});

        document.querySelector(label ? '#copyFromFound' : '#copyToFound').innerHTML='';
        document.querySelector(label ? '#copyFromFilter' : '#copyToFilter').value='';
        manageListUserSelected(label)
      }else{
        Swal.fire(
          'Atención',
          'Ya se agregó el cliente a la lista',
          'warning'
        )
      }
    }
}

const manageListUserSelected =(label,enabled)=>{
    let listUserSelected = ''
    let dataFilter = label ? copyFromUserSelect : copyToUserSelect

    enabled ? '' : (document.querySelector(label ? '#copyFromFilter' : '#copyToFilter').disabled = true)

    enabled ? '' : document.querySelector('.tail-select').classList.add('disabled-select')

    dataFilter.map(user=>{
      listUserSelected+=`
      <li class="flex py-2 hover:bg-gray-50 items-center ">
        <img class="h-8 w-8 rounded-full" src="../../../almacenamiento/foto-usuario/0.png" alt="">
        <div class="ml-3">
          <p class="text-xs font-medium text-gray-900">${user.name}  <i class="fas fa-times text-red-700 cursor-pointer" onClick="deleteItemtoList('${user.id}',${label})"></i></p>
         
        </div>
      </li>`;
    })
    document.querySelector(label ? '#copyFromSelected' : '#copyToSelected').innerHTML = listUserSelected
}

const deleteItemtoList =(id, label)=>{
    document.querySelector(label ? '#copyFromFilter' : '#copyToFilter').disabled = false
    document.querySelector('.tail-select').classList.remove('disabled-select')

    if(label){
        copyFromUserSelect =[...copyFromUserSelect.filter(user=>user.id != id)]
        manageListUserSelected(label,1)
    }else{
        copyToUserSelect =[...copyToUserSelect.filter(user=>user.id != id)]
        manageListUserSelected(label,1)
    }
    
}

const clearData = () => {
    tail.select(document.querySelector('.selectApp')).remove()
    initialConfig()
    copyFromUserSelect.length = 0
    copyToUserSelect.length = 0

    document.querySelector('#copyFromFilter').disabled = false
    document.querySelector('#copyToFilter').disabled = false
    document.querySelector('#copyToSelected').innerHTML = ''
    document.querySelector('#copyFromSelected').innerHTML = ''
}

/*  */

document.getElementById('copyFromFilter').addEventListener('keyup',(e)=>getUser(e,1))
document.getElementById('copyToFilter').addEventListener('keyup',(e)=>getUser(e,0))

document.querySelector('#copyConfirm').addEventListener('click', () => {
    let copyFrom = copyFromUserSelect.length ? copyFromUserSelect[0].id : ''
    let copyTo = copyToUserSelect.length ? copyToUserSelect[0].id : ''

    let appSelected = document.querySelector('.selectApp')?.querySelector('option[selected]')
    let method = appSelected.value == 1 ? 'copyUserDynamics' : (appSelected.value == 2 ? 'copyUserYeminus' : '') 
    let textAux = ''
    appSelected.value == 2 ? textAux = `<br><u class="text-theme-1 text-xs italic">(Se copiarán solo las bodegas y permisos sobre documentos)</u>` : textAux = ''
    if( copyFrom && copyTo && method){
        Swal.fire({
            title: 'Confirmar Copiado de Permisos '+appSelected.textContent,
            html: "Esta seguro de copiar los permisos <br>del usuario <i class='font-bold'>"+copyFromUserSelect[0].name+"</i> al usuario <i class='font-bold'>"+copyToUserSelect[0].name+"</i>? <br><br><hr><i class='text-red-500 text-xs'>Los permisos que tenga el usuario <u class='font-bold'>"+copyToUserSelect[0].name+"</u> serán eliminados y no podrán recuperarse.</i>"+textAux,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#28a745',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Confirmar <i class="fas fa-check"></i>',
            cancelButtonText: 'Cancelar <i class="fas fa-times-circle"></i>'
        }).then(async (result) => {
            if(result.isConfirmed){
              top.document.getElementById('mainLoader').classList.remove('hidden');
                
              await fetch('CopyPermissions.php',{
                method:'post',
                body:JSON.stringify({
                  class:'CopyPermissions',
                  method: method,
                  param:{
                    copyFrom: copyFrom,
                    copyTo: copyTo
                  }
                })
              })
              .then(res=>res.json())
              .then(res=>{
                if(res.success){
                  Swal.fire({
                    icon: 'success',
                    title: 'Permisos Copiados Satisfactoriamente!',
                    showConfirmButton: false,
                    timer: 1000
                  })           
                }
              })
              .catch(error=>{
                Swal.fire(
                  'Atención',
                  'Se presentó un error al intentar copiar los permisos, intente más tarde',
                  'error'
                )
                console.error(error)
              })
              .finally(()=>{
                top.document.getElementById('mainLoader').classList.add('hidden');
                clearData()
              })
      
            }
        })
    }
})

/* Config DOM Init */
document.addEventListener("DOMContentLoaded", function(event) {
  feather.replace()

  initialConfig()
})
/* END: DOM Configuration */